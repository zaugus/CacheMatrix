#Matrix inversion

# makeCacheMatrix creates a list containing a function to
# 1. set  matrix
# 2. get matrix
# 3. set matrix
# 4. get matrix
makeCacheMatrix <- function(x = matrix()) 
    {
         inv <- NULL
         set <- function(y) {
         x <<- y
         inv <<- NULL
     }
    get <- function() x
    setinverse <- function(inverse) inv <<- inverse
    getinverse <- function() inv
    list(set=set,
          get=get, 
          setinverse=setinverse,  
          getinverse=getinverse)
}






# This function assumes that the matrix is always invertible.
cacheSolve <- function(x, ...) 
{
    inv <- x$getinverse()
    if(!is.null(inv)) 
{
        message("getting cached data.")
        return(inv)
    }
    data <- x$get()
    inv <- solve(data)
    x$setinverse(inv)
    inv
}

